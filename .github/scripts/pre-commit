#!/usr/bin/env bash
# SPDX-FileCopyrightText: 2025 RAprogramm <andrey.rozanov.vl@gmail.com>
#
# SPDX-License-Identifier: MIT

set -euo pipefail

echo "🔧 Ensuring nightly rustfmt is available..."
if ! rustup toolchain list | grep -q "^nightly"; then
  rustup toolchain install nightly >/dev/null
fi
rustup component add rustfmt --toolchain nightly >/dev/null

echo "🧹 Checking formatting with rustfmt..."
cargo +nightly fmt --all -- --check

echo "📜 Checking REUSE compliance..."
if command -v reuse &> /dev/null; then
    reuse lint
else
    echo "⚠️  Warning: reuse tool not installed, skipping license compliance check"
    echo "   Install with:"
    echo "   - Arch Linux: paru -S reuse (or sudo pacman -S reuse)"
    echo "   - pip:        pip install reuse"
fi

echo "🔍 Running clippy (all features, all targets)..."
cargo clippy --workspace --all-targets --all-features -- -D warnings

echo "🧪 Running tests (all features)..."
cargo test -vv

echo "🛡️ Running cargo audit..."
if ! command -v cargo-audit >/dev/null 2>&1; then
  cargo install --locked cargo-audit >/dev/null
fi
cargo audit

echo "🔒 Running cargo deny..."
if ! command -v cargo-deny >/dev/null 2>&1; then
  echo "Installing cargo-deny..."
  cargo install --locked cargo-deny --version 0.18.4 >/dev/null
fi
cargo deny check advisories bans licenses sources

# Uncomment if you want to validate SQLx offline data
# echo "📦 Validating SQLx prepare..."
# cargo sqlx prepare --check --workspace

# same deterministic env
export TZ=UTC
export LC_ALL=C.UTF-8
export NO_COLOR=1
export CARGO_TERM_COLOR=never
export SOURCE_DATE_EPOCH=0

# Generate
./.github/scripts/gen_readme.sh

# Stage README if changed
if ! git diff --quiet -- README.md; then
  git add README.md
fi

echo "✅ All checks passed!"


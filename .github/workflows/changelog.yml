# SPDX-FileCopyrightText: 2025 RAprogramm <andrey.rozanov.vl@gmail.com>
#
# SPDX-License-Identifier: MIT

name: Changelog

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to generate changelog for (e.g., v0.24.19)'
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  changelog:
    name: Generate changelog and create release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install git-cliff
        uses: taiki-e/install-action@v2
        with:
          tool: git-cliff

      - name: Determine tag
        id: tag
        run: |
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Generate changelog for tag
        id: changelog
        run: |
          TAG="${{ steps.tag.outputs.tag }}"
          echo "Generating changelog for tag: $TAG"

          # Generate release notes for this specific tag
          NOTES=$(git cliff --config cliff.toml --latest --strip header)

          # Save to output for GitHub Release
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "$NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Update CHANGELOG.md
        run: |
          # Regenerate full CHANGELOG
          git cliff --config cliff.toml --output CHANGELOG.md

          # Check if there are changes
          if git diff --quiet CHANGELOG.md; then
            echo "No changes to CHANGELOG.md"
            echo "updated=false" >> $GITHUB_ENV
          else
            echo "CHANGELOG.md updated"
            echo "updated=true" >> $GITHUB_ENV
          fi

      - name: Commit and push CHANGELOG
        if: env.updated == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "chore: update CHANGELOG.md for ${{ steps.tag.outputs.tag }} [skip ci]"
          git push origin HEAD:main

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Release ${{ steps.tag.outputs.tag }}
          body: ${{ steps.changelog.outputs.notes }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

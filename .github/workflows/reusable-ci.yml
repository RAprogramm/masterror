name: Reusable CI

on:
  workflow_call:
    inputs:
      all-features:
        type: boolean
        default: true

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain: [1.89.0, stable] # MSRV + latest stable
    steps:
      - uses: actions/checkout@v4

      # Устанавливаем нужный тулчейн для сборки/Clippy/Tests
      - name: Install Rust (${{ matrix.toolchain }})
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy

      # Устанавливаем nightly rustfmt один раз для проверки форматирования
      - name: Install nightly rustfmt
        if: matrix.toolchain == 'stable'
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      # Fmt гоняем только на stable, nightly берём только для форматтера
      - name: Check formatting (nightly rustfmt)
        if: matrix.toolchain == 'stable'
        run: cargo +nightly fmt --all -- --check

      - name: Clippy
        run: |
          if [ "${{ inputs.all-features }}" = "true" ]; then
            cargo clippy --all-targets --all-features -- -D warnings
          else
            cargo clippy --all-targets -- -D warnings
          fi

      - name: Tests
        run: |
          if [ "${{ inputs.all-features }}" = "true" ]; then
            cargo test --all-features --no-fail-fast
          else
            cargo test --no-fail-fast
          fi

      - name: Package (dry-run)
        run: cargo package --locked

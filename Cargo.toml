[package]
name = "masterror"
version = "0.3.2"
rust-version = "1.89"
edition = "2024"
description = "Application error types and response mapping"
license = "MIT OR Apache-2.0"
documentation = "https://docs.rs/masterror"
repository = "https://github.com/RAprogramm/masterror"
readme = "README.md"
categories = ["rust-patterns", "web-programming"]
keywords = ["error", "api", "framework"]


[features]
default = []
axum = ["dep:axum", "dep:serde_json"]       # IntoResponse + JSON body
actix = ["dep:actix-web", "dep:serde_json"]
sqlx = ["dep:sqlx"]
redis = ["dep:redis"]
validator = ["dep:validator"]
serde_json = ["dep:serde_json"]
config = ["dep:config"]                     # config::ConfigError -> AppError
multipart = ["axum"]
tokio = ["dep:tokio"]
reqwest = ["dep:reqwest"]
turnkey = []

openapi = ["dep:utoipa"]

[dependencies]
thiserror = "2"
tracing = "0.1"

serde = { version = "1", features = ["derive"] }
serde_json = { version = "1", optional = true }

# опциональные интеграции
axum = { version = "0.8", optional = true, default-features = false, features = [
  "json",
  "multipart",
] }
actix-web = { version = "4", optional = true, default-features = false, features = [
  "macros",
] }
sqlx = { version = "0.8", optional = true, default-features = false, features = [
  "migrate",
] }
redis = { version = "0.32", optional = true, default-features = false }
validator = { version = "0.20", optional = true }
config = { version = "0.15", optional = true }
utoipa = { version = "5.3", optional = true }
tokio = { version = "1", optional = true, features = ["time"] }
reqwest = { version = "0.12", optional = true, default-features = false }

[dev-dependencies]
serde_json = "1"
tokio = { version = "1", features = ["macros", "rt-multi-thread", "net", "time"], default-features = false }

[lib]
crate-type = ["cdylib", "rlib"]

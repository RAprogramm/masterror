[package]
name = "masterror"
version = "0.13.1"
rust-version = "1.90"
edition = "2024"
license = "MIT OR Apache-2.0"
repository = "https://github.com/RAprogramm/masterror"
readme = "README.md"
description = "Application error types and response mapping"
documentation = "https://docs.rs/masterror"
build = "build.rs"
categories = ["rust-patterns", "web-programming"]
keywords = ["error", "api", "framework"]
include = [
  "Cargo.toml",
  "Cargo.lock",
  "build.rs",
  "src/**",
  "tests/**",
  "README.md",
  "README.ru.md",
  "README.template.md",
  "CHANGELOG.md",
  "LICENSE-APACHE",
  "LICENSE-MIT",
  "Makefile.toml",
  "deny.toml",
  "idea.md",
  "target.md",
  "build/**",
  "masterror-derive/**",
  "masterror-template/**",
  ".cargo/audit.toml",
  ".cargo/config.toml"
]

[workspace]
members = ["masterror-derive", "masterror-template"]

resolver = "3"

# Defaults for members (root объявлен строками выше, потому что build.rs парсит его как строки)
[workspace.package]
edition = "2024"
rust-version = "1.90"
license = "MIT OR Apache-2.0"
repository = "https://github.com/RAprogramm/masterror"
readme = "README.md"


[features]
default = []
axum = ["dep:axum", "dep:serde_json"]
actix = ["dep:actix-web", "dep:serde_json"]

# Разделили: лёгкая обработка ошибок (sqlx-core) и опциональные миграции (полный sqlx)
sqlx = ["dep:sqlx-core"]    # maps sqlx_core::Error
sqlx-migrate = ["dep:sqlx"] # maps sqlx::migrate::MigrateError

redis = ["dep:redis"]
validator = ["dep:validator"]
serde_json = ["dep:serde_json"]
config = ["dep:config"]
multipart = ["axum"]
tokio = ["dep:tokio"]
reqwest = ["dep:reqwest"]
teloxide = ["dep:teloxide-core"]
telegram-webapp-sdk = ["dep:telegram-webapp-sdk"]
frontend = ["dep:wasm-bindgen", "dep:js-sys", "dep:serde-wasm-bindgen"]
turnkey = []
openapi = ["dep:utoipa"]

[workspace.dependencies]
masterror-derive = { version = "0.7.0" }
masterror-template = { version = "0.3.6" }

[dependencies]
masterror-derive = { version = "0.7" }
masterror-template = { workspace = true }
tracing = "0.1"

serde = { version = "1", features = ["derive"] }
serde_json = { version = "1", optional = true }
http = "1"

# optional integrations
axum = { version = "0.8", optional = true, default-features = false, features = [
  "json",
  "multipart",
] }
actix-web = { version = "4", optional = true, default-features = false, features = [
  "macros",
] }

# Lean core only; no drivers, no TLS, no macros
sqlx-core = { version = "0.8", optional = true, default-features = false }
# Full sqlx ONLY for migrate mapping; still no default features
sqlx = { version = "0.8", optional = true, default-features = false, features = [
  "migrate",
] }

redis = { version = "0.32", optional = true, default-features = false }
validator = { version = "0.20", optional = true, features = ["derive"] }
config = { version = "0.15", optional = true }
utoipa = { version = "5.4", optional = true }
tokio = { version = "1", optional = true, features = ["time"] }
reqwest = { version = "0.12", optional = true, default-features = false }
teloxide-core = { version = "0.13", optional = true, default-features = false }
telegram-webapp-sdk = { version = "0.2", optional = true }
wasm-bindgen = { version = "0.2", optional = true }
js-sys = { version = "0.3", optional = true }
serde-wasm-bindgen = { version = "0.6", optional = true }
uuid = { version = "1", default-features = false, features = [
  "std"
] }

[dev-dependencies]
serde_json = "1"
tokio = { version = "1", features = [
  "macros",
  "rt-multi-thread",
  "net",
  "time",
], default-features = false }
trybuild = "1"
toml = "0.9"
tempfile = "3"

[build-dependencies]
serde = { version = "1", features = ["derive"] }
toml = "0.9"

[package.metadata.masterror.readme]
feature_order = [
  "axum",
  "actix",
  "openapi",
  "serde_json",
  "sqlx",
  "sqlx-migrate",
  "reqwest",
  "redis",
  "validator",
  "config",
  "tokio",
  "multipart",
  "teloxide",
  "telegram-webapp-sdk",
  "frontend",
  "turnkey",
]
feature_snippet_group = 4
conversion_lines = [
  "`std::io::Error` → Internal",
  "`String` → BadRequest",
  "`sqlx::Error` → NotFound/Database",
  "`redis::RedisError` → Cache",
  "`reqwest::Error` → Timeout/Network/ExternalApi",
  "`axum::extract::multipart::MultipartError` → BadRequest",
  "`validator::ValidationErrors` → Validation",
  "`config::ConfigError` → Config",
  "`tokio::time::error::Elapsed` → Timeout",
  "`teloxide_core::RequestError` → RateLimited/Network/ExternalApi/Deserialization/Internal",
  "`telegram_webapp_sdk::utils::validate_init_data::ValidationError` → TelegramAuth",
]

[package.metadata.masterror.readme.features.axum]
description = "IntoResponse integration with structured JSON bodies"

[package.metadata.masterror.readme.features.actix]
description = "Actix Web ResponseError and Responder implementations"

[package.metadata.masterror.readme.features.openapi]
description = "Generate utoipa OpenAPI schema for ErrorResponse"

[package.metadata.masterror.readme.features.serde_json]
description = "Attach structured JSON details to AppError"

[package.metadata.masterror.readme.features.sqlx]
description = "Classify sqlx_core::Error variants into AppError kinds"

[package.metadata.masterror.readme.features.sqlx-migrate]
description = "Map sqlx::migrate::MigrateError into AppError (Database)"

[package.metadata.masterror.readme.features.reqwest]
description = "Classify reqwest::Error as timeout/network/external API"

[package.metadata.masterror.readme.features.redis]
description = "Map redis::RedisError into cache-aware AppError"

[package.metadata.masterror.readme.features.validator]
description = "Convert validator::ValidationErrors into validation failures"

[package.metadata.masterror.readme.features.config]
description = "Propagate config::ConfigError as configuration issues"

[package.metadata.masterror.readme.features.multipart]
description = "Handle axum multipart extraction errors"

[package.metadata.masterror.readme.features.tokio]
description = "Classify tokio::time::error::Elapsed as timeout"

[package.metadata.masterror.readme.features.teloxide]
description = "Convert teloxide_core::RequestError into domain errors"

[package.metadata.masterror.readme.features."telegram-webapp-sdk"]
description = "Surface Telegram WebApp validation failures"

[package.metadata.masterror.readme.features.frontend]
description = "Log to the browser console and convert to JsValue on WASM"

[package.metadata.masterror.readme.features.turnkey]
description = "Ship Turnkey-specific error taxonomy and conversions"

[lib]
crate-type = ["cdylib", "rlib"]
